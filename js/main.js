(()=>{var e={763:e=>{e.exports='<svg viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6 4.5H30L33 10.5V30C33 30.3978 32.842 30.7794 32.5607 31.0607C32.2794 31.342 31.8978 31.5 31.5 31.5H4.5C4.10218 31.5 3.72064 31.342 3.43934 31.0607C3.15804 30.7794 3 30.3978 3 30V10.506L6 4.5ZM19.5 21V15H16.5V21H12L18 27L24 21H19.5ZM29.646 10.5L28.146 7.5H7.8555L6.3555 10.5H29.646Z" fill="#495057"></path></svg>'},650:e=>{e.exports='<svg viewBox="0 0 30 31" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M3.75 5.5H26.25V8H3.75V5.5ZM3.75 14.25H26.25V16.75H3.75V14.25ZM3.75 23H26.25V25.5H3.75V23Z" fill="#495057"></path></svg>'},292:e=>{e.exports='<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 3C10.9 3 10 3.9 10 5C10 6.1 10.9 7 12 7C13.1 7 14 6.1 14 5C14 3.9 13.1 3 12 3ZM12 17C10.9 17 10 17.9 10 19C10 20.1 10.9 21 12 21C13.1 21 14 20.1 14 19C14 17.9 13.1 17 12 17ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10Z" fill="#09121F"></path></svg>'},675:e=>{e.exports='<svg viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M25.5 4.5H31.5C31.8978 4.5 32.2794 4.65804 32.5607 4.93934C32.842 5.22064 33 5.60217 33 6V30C33 30.3978 32.842 30.7794 32.5607 31.0607C32.2794 31.342 31.8978 31.5 31.5 31.5H4.5C4.10218 31.5 3.72064 31.342 3.43934 31.0607C3.15804 30.7794 3 30.3978 3 30V6C3 5.60217 3.15804 5.22064 3.43934 4.93934C3.72064 4.65804 4.10218 4.5 4.5 4.5H10.5V1.5H13.5V4.5H22.5V1.5H25.5V4.5ZM6 13.5V28.5H30V13.5H6ZM9 19.5H16.5V25.5H9V19.5Z" fill="#495057"></path></svg>'},412:e=>{e.exports='<svg viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.8571 12.8571V0H17.1429V12.8571H30V17.1429H17.1429V30H12.8571V17.1429H0V12.8571H12.8571Z" fill="#495057"></path></svg>'},159:e=>{e.exports='<svg viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="18" cy="18" r="18" fill="#C4C4C4"></circle><path d="M15.3333 22.2293L27.5893 9.972L29.476 11.8573L15.3333 26L6.84799 17.5147L8.73333 15.6293L15.3333 22.2293Z" fill="white"></path></svg>'},407:e=>{e.exports='<svg viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="18" cy="18" r="18" fill="#FF6B6B"></circle><circle cx="18" cy="18" r="15" fill="#FFE3E3"></circle></svg>'},619:e=>{e.exports='<svg viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="18" cy="18" r="18" fill="#FCC419"></circle><circle cx="18" cy="18" r="15" fill="#FFEC99"></circle></svg>'},822:e=>{e.exports='<svg viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M18 36C27.9411 36 36 27.9411 36 18C36 8.05887 27.9411 0 18 0C8.05887 0 0 8.05887 0 18C0 27.9411 8.05887 36 18 36ZM18 33C26.2843 33 33 26.2843 33 18C33 9.71573 26.2843 3 18 3C9.71573 3 3 9.71573 3 18C3 26.2843 9.71573 33 18 33Z" fill="#CED4DA"></path></svg>'},390:e=>{e.exports='<svg viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="18" cy="18" r="18" fill="#94D82D"></circle><circle cx="18" cy="18" r="15" fill="#E9FAC8"></circle></svg>'},105:e=>{e.exports='<svg viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M25.5 4.5H31.5C31.8978 4.5 32.2794 4.65803 32.5607 4.93934C32.842 5.22064 33 5.60217 33 6V30C33 30.3978 32.842 30.7794 32.5607 31.0607C32.2794 31.342 31.8978 31.5 31.5 31.5H4.5C4.10218 31.5 3.72064 31.342 3.43934 31.0607C3.15804 30.7794 3 30.3978 3 30V6C3 5.60217 3.15804 5.22064 3.43934 4.93934C3.72064 4.65803 4.10218 4.5 4.5 4.5H10.5V1.5H13.5V4.5H22.5V1.5H25.5V4.5ZM6 13.5V28.5H30V13.5H6ZM9 16.5H12V19.5H9V16.5ZM9 22.5H12V25.5H9V22.5ZM15 16.5H27V19.5H15V16.5ZM15 22.5H22.5V25.5H15V22.5Z" fill="#495057"></path></svg>'}},t={};function n(a){var o=t[a];if(void 0!==o)return o.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";const e=(e,t)=>{const n=document.createElement("div");return n.className=t,n.innerHTML=e,n};var t=n(650),a=n.n(t);var o=n(412),r=n.n(o);const i=t=>e(r(),t);var s=n(763),l=n.n(s);var d=n(105),c=n.n(d);const u=t=>e(c(),t);var m=n(675),p=n.n(m);const h=t=>e(p(),t),g=e=>{for(;e.firstChild;)e.removeChild(e.firstChild)},f=(e,t)=>{e.appendChild(t)},v=(()=>{const e=localStorage.getItem("tags")?JSON.parse(localStorage.tags):[];let t=e.length>0?e[e.length-1].id:-1;const n=()=>localStorage.tags=JSON.stringify(e);return{getTagById:t=>e.find((e=>e.id==t)),getTags:()=>e,getLastId:()=>t,addTag:a=>{e.push(a),n(),t++},removeTag:t=>{const a=e.findIndex((e=>e.id==t));a>-1&&(e.splice(a,1),n())},updateTag:(t,a)=>{const o=e.findIndex((e=>e.id==t));o>-1&&(e.splice(t,1,a),n())}}})(),_=()=>{const e=document.createElement("hr");return e.className="divider",e},C=e=>{const t=document.createElement("p");return t.className="empty-message",t.textContent=e,t};var b=n(292),w=n.n(b);const y=t=>e(w(),t),k=(()=>{const e=(()=>{if(localStorage.getItem("tasks")){const e=JSON.parse(localStorage.tasks);for(let t of e)t.dueDate?t.dueDate=new Date(parseInt(t.dueDate)):t.dueDate=null;return e}return[]})();let t=e.length>0?e[e.length-1].id:-1;const n=()=>{const t=[];for(let n of e){let e={...n};e.dueDate&&(e.dueDate=+e.dueDate),t.push(e)}localStorage.tasks=JSON.stringify(t)};return{getTaskById:t=>e.find((e=>e.id==t)),getTasks:()=>e,getLastId:()=>t,getSortedTasks:()=>[...e].sort(((e,t)=>{const n=e.done?-99:e.priorityId,a=t.done?-99:t.priorityId;return n>a?-1:n<a?1:e.dueDate<t.dueDate?-1:e.dueDate>t.dueDate?1:void 0})),addTask:a=>{e.push(a),n(),t++},updateTask:(t,a)=>{const o=e.findIndex((e=>e.id==t));o>-1&&(e[o]=a,n())},removeTask:t=>{const a=e.findIndex((e=>e.id==t));a>-1&&(e.splice(a,1),n())}}})(),E=e=>{const t=document.createElement("h3");return t.className="menu__title",t.textContent=e,t},x=(()=>{let e=null;return{getElement:()=>e,setElement:t=>e=t}})(),N=({id:e,color:t,title:n},a)=>{let o=a;const r=document.createElement("div");r.setAttribute("data-id",e),r.className="menu__tag";const i=document.createElement("div");i.className="menu__color-symbol",i.style.backgroundColor=t;const s=document.createElement("h4");s.className="menu__tag__title",s.textContent=n;const l=y("menu__tag__icon menu__tag__icon--more");r.appendChild(i),r.appendChild(s),r.appendChild(l),r.addEventListener("click",(t=>{t.preventDefault(),t.target==l||l.contains(t.target)?A.generateMenu(e,t.x,t.y):(be.generateTasks(n,e,o),x.setElement(r),ke.cleanActives(),d())}));const d=()=>{r.classList.add("menu__tag--active")};return{element:r,addActiveClass:d,removeActiveClass:()=>{r.classList.remove("menu__tag--active")},updateTasks:e=>o=e}},T=["#ff6b6b","#f06595","#cc5de8","#845ef7","#5c7cfa","#339af0","#22b8cf","#20c997","#51cf66","#94d82d","#fcc419","#ff922b"],D=(()=>{let e=null;const t=document.createElement("div");t.className="color-picker hidden";const n=document.createElement("h3");n.className="color-picker__title",n.textContent="Pick a color:";const a=document.createElement("div");a.className="color-picker__colors";for(let n of T){const o=document.createElement("div");o.className="color-picker__color",o.style.backgroundColor=n,o.addEventListener("click",(()=>{null!=e&&(e.style.backgroundColor=n,e.setAttribute("data-color",n)),t.classList.add("hidden")})),a.appendChild(o)}return t.appendChild(n),t.appendChild(a),document.addEventListener("mousedown",(e=>{e.target==t||t.contains(e.target)||t.classList.add("hidden")})),{element:t,generate:(n,a,o)=>{e=n,t.style.top=`${o}px`,t.style.left=`${a}px`,t.classList.remove("hidden")}}})(),M=(()=>{let e=null;const t=document.createElement("div");t.className="task-form hidden";const n=()=>t.classList.add("hidden"),a=document.createElement("div");a.className="task-form__popup";const o=document.createElement("h2");o.className="task-form__title";const r=document.createElement("form");r.className="task-form__form";const i=document.createElement("div");i.className="task-form__form__inputs";const s=document.createElement("input");s.classList="task-form__form__title",s.placeholder="Task Title",s.required=!0,s.maxLength=25;const l=document.createElement("textarea");l.classList="task-form__form__desc",l.placeholder="Description (Optional)",l.maxLength=140,i.appendChild(s),i.appendChild(l);const d=document.createElement("div");d.className="task-form__form__options";const c=document.createElement("input"),u=(new Date).toISOString().substring(0,10);c.className="task-form__form__date",c.type="date",c.min=u;const m=document.createElement("select");m.className="task-form__form__select";const p=e=>{g(m);for(let t of[{id:-2,title:"Tag (Optional)"},{id:-1,title:"None"},...e]){const e=document.createElement("option");e.value=t.id,e.textContent=t.title,-2===t.id&&(e.disabled=!0,e.selected=!0),m.appendChild(e)}},h=document.createElement("select");h.className="task-form__form__select",d.appendChild(c),d.appendChild(m),d.appendChild(h);const f=document.createElement("div");f.className="task-form__form__btns";const _=document.createElement("button");_.className="task-form__form__btn task-form__form__btn--submit",_.type="submit";const C=document.createElement("button");C.className="task-form__form__btn task-form__form__btn--cancel",C.textContent="Cancel",C.type="button",C.addEventListener("click",n);const b=document.createElement("button");return b.className="task-form__form__btn task-form__form__btn--delete",b.textContent="Delete",b.type="button",b.addEventListener("click",(()=>{e&&e.id>-1&&(k.removeTask(e.id),ke.updateTasks()),n()})),f.appendChild(_),f.appendChild(b),f.appendChild(C),r.appendChild(i),r.appendChild(d),r.appendChild(f),r.addEventListener("submit",(t=>{t.preventDefault();const a={id:e&&e.id>-1?e.id+1:k.getLastId()+1,title:s.value,description:l.value?l.value:null,dueDate:c.value?new Date(c.value):null,priorityId:h.value>-1?h.value:-1,tagId:m.value>-1?m.value:-1,done:!!e&&e.done};e&&e.id>-1?k.updateTask(e.id,a):k.addTask(a),ke.updateTasks(),n()})),a.appendChild(o),a.appendChild(r),t.appendChild(a),p(v.getTags()),(e=>{g(h);for(let e of[{id:-2,title:"Priority (Optional)"},{id:-1,title:"None"},{id:0,color:"#94D82D",title:"Low"},{id:1,color:"#FCC419",title:"Medium"},{id:2,color:"#FF6B6B",title:"High"}]){const t=document.createElement("option");t.value=e.id,t.textContent=e.title,-2===e.id&&(t.disabled=!0,t.selected=!0),h.appendChild(t)}})(),{element:t,updateForm:n=>{e=n,e?(o.textContent="Edit task:",_.textContent="Edit",b.classList.remove("hidden"),s.value=e.title,l.value=e.description,e.dueDate&&(c.value=e.dueDate.toISOString().substring(0,10)),h.value=e.priorityId,m.value=e.tagId):(o.textContent="Add new task:",_.textContent="Add",b.classList.add("hidden"),s.value="",l.value="",c.value="",h.value=-2,m.value=-2),t.classList.remove("hidden")},hide:n,updateTags:p}})(),L=(()=>{let e=[];const t=document.createElement("div");t.className="menu__tags-container";const n=(e,t)=>e.filter((e=>e.tagId==t.id)),a=o=>{if(g(t),t.appendChild(E("Tags")),e=[],o.length>0){const a=document.createElement("div");a.className="menu__tags";for(let t of o){const o=N(t,n(k.getSortedTasks(),t));e.push(o),a.appendChild(o.element)}t.appendChild(a)}else t.appendChild(C("It's pretty empty here 😕. Let's add a new tag with the button below!"));M.updateTags(v.getTags()),t.appendChild((e=>{const t=document.createElement("div");t.className="menu__new-tag";const n=()=>{const n=document.createElement("form");n.className="menu__new-tag__form";const a=document.createElement("button");a.className="menu__new-tag__picker";const o=document.createElement("div");o.className="menu__new-tag__picker__current",o.style.backgroundColor="#ff6b6b",o.setAttribute("data-color","#ff6b6b"),a.addEventListener("click",(e=>{e.preventDefault(),D.generate(o,e.x,e.y)})),a.appendChild(o);const r=document.createElement("input");r.className="menu__new-tag__form__input",r.type="text",r.placeholder="Tag name",r.required=!0,r.maxLength=15;const i=document.createElement("button");i.className="menu__new-tag__btn menu__new-tag__btn--submit",i.type="submit",i.textContent="Add",n.appendChild(a),n.appendChild(r),n.appendChild(i),n.addEventListener("submit",(t=>{t.preventDefault(),e({color:o.getAttribute("data-color"),title:r.value})})),g(t),t.appendChild(n)};return(()=>{const e=document.createElement("button");e.classList="menu__new-tag__btn menu__new-tag__btn--new";const a=document.createElement("h4");a.className="menu__new-tag__btn__title",a.textContent="Create new tag",e.appendChild(i("menu__new-tag__btn__icon")),e.appendChild(a),e.addEventListener("click",n),g(t),t.appendChild(e)})(),t})((e=>{v.addTag({id:v.getLastId()+1,...e}),a(v.getTags())})))};return a(v.getTags()),{element:t,generateTags:a,tagElements:e,updateTasks:t=>{const a=v.getTags();if(a.length>0)for(let o=0;o<e.length;o++)e[o].updateTasks(n(t,a[o]))},cleanActives:()=>{for(let t=0;t<e.length;t++)e[t].removeActiveClass()}}})(),H=(()=>{let e=-1;const t=document.createElement("div");t.className="tag-popup tag-popup--delete hidden";const n=document.createElement("div");n.className="tag-popup__popup";const a=document.createElement("h3");a.className="tag-popup__title",a.textContent="Delete tag:";const o=document.createElement("p");o.className="tag-popup__desc",o.textContent="Are you sure you want to delete the tag and all the tasks with the tag?";const r=document.createElement("div");r.className="tag-popup__btns";const i=document.createElement("button");i.className="tag-popup__btn tag-popup__btn--delete",i.textContent="Delete",i.addEventListener("click",(()=>{if(e>-1){v.removeTag(e);const t=k.getTasks(),n=[];for(let a=0;a<t.length;a++)t[a].tagId==e&&n.push(t[a]);for(let e of n)k.removeTask(e.id);L.generateTags(v.getTags()),ye.menuOptions[0].element.click()}l()}));const s=document.createElement("button");s.className="tag-popup__btn tag-popup__btn--cancel",s.textContent="Cancel",s.addEventListener("click",(()=>l())),r.appendChild(i),r.appendChild(s),n.appendChild(a),n.appendChild(o),n.appendChild(r),t.appendChild(n);const l=()=>t.classList.add("hidden");return{element:t,generatePopup:n=>{e=n,t.classList.remove("hidden")}}})(),S=(()=>{let e=null;const t=document.createElement("div");t.className="tag-popup tag-popup--edit hidden";const n=document.createElement("div");n.className="tag-popup__popup";const a=document.createElement("h3");a.className="tag-popup__title",a.textContent="Edit task:";const o=document.createElement("form");o.className="tag-popup__form";const r=document.createElement("div");r.className="tag-popup__inputs";const i=document.createElement("button");i.type="button",i.className="tag-popup__picker";const s=document.createElement("div");s.className="tag-popup__picker__current",s.style.backgroundColor="#ff6b6b",s.setAttribute("data-color","#ff6b6b"),i.appendChild(s),i.addEventListener("click",(e=>{e.preventDefault(),D.generate(s,e.x,e.y)}));const l=document.createElement("input");l.className="tag-popup__input",l.type="text",l.placeholder="Tag title",l.required=!0,r.appendChild(i),r.appendChild(l);const d=document.createElement("div");d.className="tag-popup__btns";const c=document.createElement("button");c.className="tag-popup__btn tag-popup__btn--edit",c.type="submit",c.textContent="Edit";const u=document.createElement("button");u.className="tag-popup__btn tag-popup__btn--cancel",u.type="button",u.textContent="Cancel",u.addEventListener("click",(()=>m())),d.appendChild(c),d.appendChild(u),o.appendChild(r),o.appendChild(d),n.appendChild(a),n.appendChild(o),t.appendChild(n),t.addEventListener("submit",(t=>{if(t.preventDefault(),e){e={...e,color:s.getAttribute("data-color"),title:l.value},v.updateTag(e.id,e);const t=document.querySelector(`div.menu__tag[data-id="${e.id}"]`);t.querySelector(".menu__color-symbol").style.backgroundColor=e.color,t.querySelector(".menu__tag__title").textContent=e.title,ke.updateTasks(),m()}}));const m=()=>t.classList.add("hidden");return{element:t,generatePopup:n=>{e={...v.getTagById(n)},e&&(l.value=e.title,s.style.backgroundColor=e.color,s.setAttribute("data-color",e.color),t.classList.remove("hidden"))}}})(),A=(()=>{let e=-1;const t=document.createElement("div");t.className="tag-menu hidden";const n=document.createElement("h4");n.className="tag-menu__title",n.textContent="Select action:";const a=document.createElement("button");a.className="tag-menu__btn tag-menu__btn--edit",a.textContent="Edit",a.addEventListener("click",(()=>{S.generatePopup(e),r()}));const o=document.createElement("button");o.className="tag-menu__btn tag-menu__btn--delete",o.textContent="Delete",o.addEventListener("click",(()=>{H.generatePopup(e),r()}));const r=()=>t.classList.add("hidden");return t.appendChild(n),t.appendChild(a),t.appendChild(o),document.addEventListener("mousedown",(e=>{e.target==t||t.contains(e.target)||r()})),{element:t,generateMenu:(n,a,o)=>{e=n,t.classList.remove("hidden"),t.style.top=`${o}px`,t.style.left=a-t.clientWidth+"px"}}})();var V=n(159),P=n.n(V),I=n(822),W=n.n(I),F=n(390),B=n.n(F),O=n(619),j=n.n(O),Z=n(407),X=n.n(Z);const q={done:P(),none:W(),low:B(),medium:j(),high:X()},Y=({id:e,color:t,title:n},a,o)=>{let r=o;const i=document.createElement("div");i.setAttribute("data-id",e),i.className="menu__priority";const s=document.createElement("div");s.className="menu__color-symbol",s.style.backgroundColor=t;const l=document.createElement("h4");return l.className="menu__priority__title",l.textContent=n,i.appendChild(s),i.appendChild(l),i.addEventListener("click",(e=>{e.preventDefault(),a(),be.generateTasks(n,-1,r),x.setElement(i)})),{element:i,addActiveClass:()=>{i.classList.add("menu__priority--active")},removeActiveClass:()=>{i.classList.remove("menu__priority--active")},updateTasks:e=>r=e}},J=(()=>{const e=[{id:0,color:"#94D82D",title:"Low"},{id:1,color:"#FCC419",title:"Medium"},{id:2,color:"#FF6B6B",title:"High"}],t=[],n=document.createElement("div");n.className="menu__priorities-container";const a=(e,t)=>e.filter((e=>e.priorityId==t.id));return(()=>{const o=document.createElement("div");o.className="menu__priorities";for(let n of e){const e=Y(n,(()=>{ke.cleanActives(),e.addActiveClass()}),a(k.getSortedTasks(),n));t.push(e),o.appendChild(e.element)}g(n),n.appendChild(E("Priorities")),n.appendChild(o)})(),{element:n,clearActives:()=>{t.forEach((e=>e.removeActiveClass()))},getPriorityById:t=>e.find((e=>e.id==t)),priorityElements:t,updateTasks:n=>{for(let o=0;o<e.length;o++)t[o].updateTasks(a(n,e[o]))}}})();function z(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function Q(e){z(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"==typeof e&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function $(e,t){z(2,arguments);var n=Q(e),a=Q(t),o=n.getTime()-a.getTime();return o<0?-1:o>0?1:o}function R(e,t){z(2,arguments);var n=Q(e),a=Q(t),o=n.getFullYear()-a.getFullYear(),r=n.getMonth()-a.getMonth();return 12*o+r}function U(e){z(1,arguments);var t=Q(e);return t.setHours(23,59,59,999),t}function G(e){z(1,arguments);var t=Q(e),n=t.getMonth();return t.setFullYear(t.getFullYear(),n+1,0),t.setHours(23,59,59,999),t}function K(e){z(1,arguments);var t=Q(e);return U(t).getTime()===G(t).getTime()}function ee(e,t){z(2,arguments);var n,a=Q(e),o=Q(t),r=$(a,o),i=Math.abs(R(a,o));if(i<1)n=0;else{1===a.getMonth()&&a.getDate()>27&&a.setDate(30),a.setMonth(a.getMonth()-r*i);var s=$(a,o)===-r;K(Q(e))&&1===i&&1===$(e,o)&&(s=!1),n=r*(i-Number(s))}return 0===n?0:n}function te(e,t){return z(2,arguments),Q(e).getTime()-Q(t).getTime()}var ne={ceil:Math.ceil,round:Math.round,floor:Math.floor,trunc:function(e){return e<0?Math.ceil(e):Math.floor(e)}};function ae(e){return e?ne[e]:ne.trunc}function oe(e,t,n){z(2,arguments);var a=te(e,t)/1e3;return ae(null==n?void 0:n.roundingMethod)(a)}var re={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function ie(e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.width?String(t.width):e.defaultWidth,a=e.formats[n]||e.formats[e.defaultWidth];return a}}var se,le={date:ie({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:ie({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:ie({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},de={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function ce(e){return function(t,n){var a,o=n||{};if("formatting"===(o.context?String(o.context):"standalone")&&e.formattingValues){var r=e.defaultFormattingWidth||e.defaultWidth,i=o.width?String(o.width):r;a=e.formattingValues[i]||e.formattingValues[r]}else{var s=e.defaultWidth,l=o.width?String(o.width):e.defaultWidth;a=e.values[l]||e.values[s]}return a[e.argumentCallback?e.argumentCallback(t):t]}}function ue(e){return function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=n.width,o=a&&e.matchPatterns[a]||e.matchPatterns[e.defaultMatchWidth],r=t.match(o);if(!r)return null;var i,s=r[0],l=a&&e.parsePatterns[a]||e.parsePatterns[e.defaultParseWidth],d=Array.isArray(l)?pe(l,(function(e){return e.test(s)})):me(l,(function(e){return e.test(s)}));i=e.valueCallback?e.valueCallback(d):d,i=n.valueCallback?n.valueCallback(i):i;var c=t.slice(s.length);return{value:i,rest:c}}}function me(e,t){for(var n in e)if(e.hasOwnProperty(n)&&t(e[n]))return n}function pe(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return n}const he={code:"en-US",formatDistance:function(e,t,n){var a,o=re[e];return a="string"==typeof o?o:1===t?o.one:o.other.replace("{{count}}",t.toString()),null!=n&&n.addSuffix?n.comparison&&n.comparison>0?"in "+a:a+" ago":a},formatLong:le,formatRelative:function(e,t,n,a){return de[e]},localize:{ordinalNumber:function(e,t){var n=Number(e),a=n%100;if(a>20||a<10)switch(a%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},era:ce({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:ce({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(e){return e-1}}),month:ce({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:ce({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:ce({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(se={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(e){return parseInt(e,10)}},function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.match(se.matchPattern);if(!n)return null;var a=n[0],o=e.match(se.parsePattern);if(!o)return null;var r=se.valueCallback?se.valueCallback(o[0]):o[0];r=t.valueCallback?t.valueCallback(r):r;var i=e.slice(a.length);return{value:r,rest:i}}),era:ue({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:ue({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:ue({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:ue({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:ue({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};function ge(e){return function(e,t){if(null==e)throw new TypeError("assign requires that input parameter not be null or undefined");for(var n in t=t||{})Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}({},e)}function fe(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}var ve=1440,_e=43200;const Ce=({id:t,title:n,description:a,dueDate:o,priorityId:r,tagId:i,done:s})=>{const l=document.createElement("div");l.className=s?"task task--done":"task";let d=(c=s?"done":r>-1?J.getPriorityById(r).title.toLowerCase():"none",e(q[c],"task__icon"));var c;const u=document.createElement("div");u.className="task__info";const m=document.createElement("div");m.className="task__info__basic";const p=document.createElement("h2");p.className="task__info__title",p.textContent=n;const h=document.createElement("p");h.className="task__info__desc",h.textContent=a,m.appendChild(p),m.appendChild(h);const g=document.createElement("div");if(g.className="task__info__additional",i>-1){const e=v.getTagById(i);if(e){const t=document.createElement("div");t.className="task__info__tag";const n=document.createElement("h3");n.className="task__info__tag__title",n.textContent=e.title;const a=document.createElement("div");a.className="task__info__tag__color",a.style.backgroundColor=e.color,t.appendChild(n),t.appendChild(a),g.appendChild(t)}}if(o){const e=document.createElement("p"),t=new Date;t.setHours(0,0,0,0),e.className="task__info__date",e.textContent=o.getDate()==t.getDate()?"Today":function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};z(2,arguments);var a=n.locale||he;if(!a.formatDistance)throw new RangeError("locale must contain formatDistance property");var o=$(e,t);if(isNaN(o))throw new RangeError("Invalid time value");var r,i,s=ge(n);s.addSuffix=Boolean(n.addSuffix),s.comparison=o,o>0?(r=Q(t),i=Q(e)):(r=Q(e),i=Q(t));var l,d=oe(i,r),c=(fe(i)-fe(r))/1e3,u=Math.round((d-c)/60);if(u<2)return n.includeSeconds?d<5?a.formatDistance("lessThanXSeconds",5,s):d<10?a.formatDistance("lessThanXSeconds",10,s):d<20?a.formatDistance("lessThanXSeconds",20,s):d<40?a.formatDistance("halfAMinute",null,s):d<60?a.formatDistance("lessThanXMinutes",1,s):a.formatDistance("xMinutes",1,s):0===u?a.formatDistance("lessThanXMinutes",1,s):a.formatDistance("xMinutes",u,s);if(u<45)return a.formatDistance("xMinutes",u,s);if(u<90)return a.formatDistance("aboutXHours",1,s);if(u<ve){var m=Math.round(u/60);return a.formatDistance("aboutXHours",m,s)}if(u<2520)return a.formatDistance("xDays",1,s);if(u<_e){var p=Math.round(u/ve);return a.formatDistance("xDays",p,s)}if(u<86400)return l=Math.round(u/_e),a.formatDistance("aboutXMonths",l,s);if((l=ee(i,r))<12){var h=Math.round(u/_e);return a.formatDistance("xMonths",h,s)}var g=l%12,f=Math.floor(l/12);return g<3?a.formatDistance("aboutXYears",f,s):g<9?a.formatDistance("overXYears",f,s):a.formatDistance("almostXYears",f+1,s)}(o,t,{addSuffix:!0}),e.style.color=s?"":o>=t?"#66a80f":"#e03131",g.appendChild(e)}return u.appendChild(m),u.appendChild(g),l.appendChild(d),l.appendChild(u),l.addEventListener("click",(e=>{if(e.preventDefault(),e.target==d||d.contains(e.target))k.updateTask(t,{id:t,title:n,description:a,dueDate:o,priorityId:r,tagId:i,done:!s}),ke.updateTasks();else{const e=k.getTaskById(t);e&&M.updateForm(e)}})),l},be=(()=>{let e=[];const t=document.createElement("main");return t.className="tasks-view",{element:t,generateTasks:(n,a,o)=>{const r=document.createElement("div");r.className="animation-fade";const s=document.createElement("h1");if(s.className="tasks-view__title",s.textContent=n,g(t),a>-1){const e=document.createElement("header");e.className="tasks-view__header";const t=y("tasks-view__icon--more");t.addEventListener("click",(e=>{A.generateMenu(a,e.clientX,e.clientY)}));const n=v.getTagById(a);n&&(s.textContent=n.title),e.appendChild(s),e.appendChild(t),r.appendChild(e)}else r.appendChild(s);if(r.appendChild(_()),o.length>0){const t=document.createElement("div");t.className="tasks-view__tasks";for(let n of o){const a=Ce(n);t.appendChild(a),e.push(a)}r.appendChild(t)}else r.appendChild(C("It's pretty empty here 😕. Add a new task with the button below!"));const l=document.createElement("button");l.className="tasks-view__btn",l.addEventListener("click",(()=>M.updateForm(null)));const d=document.createElement("h3");d.className="tasks-view__btn__title",d.textContent="Add new task",l.appendChild(i("tasks-view__btn__icon")),l.appendChild(d),r.appendChild(_()),r.appendChild(l),t.appendChild(r)}}})(),we=(e,t,n)=>{let a=n;const o=document.createElement("div");o.className="menu__option";const r=document.createElement("h3");return r.className="menu__option__title",r.textContent=t,o.appendChild(e),o.appendChild(r),{element:o,addActiveClass:()=>{o.classList.add("menu__option--active")},removeActiveClass:()=>{o.classList.remove("menu__option--active")},addClickEvent:e=>{o.addEventListener("click",(n=>{n.preventDefault(),e(),be.generateTasks(t,-1,a),x.setElement(o)}))},updateTasks:e=>a=e}},ye=(()=>{const t="menu__option__icon",n=document.createElement("div"),a=[e=>e.filter((e=>e.tagId<0&&e.priorityId<0&&null==e.dueDate)),e=>e.filter((e=>{const t=new Date;return t.setHours(0,0,0,0),e.dueDate&&e.dueDate.getDate()<=t.getDate()})),e=>e.filter((e=>{let t=new Date;return t.setDate(t.getDate()+7),t.setHours(0,0,0,0),e.dueDate&&e.dueDate.getDate()<=t.getDate()}))];let o=k.getSortedTasks();const r=[we((i=t,e(l(),i)),"Inbox",a[0](o)),we(u(t),"Today",a[1](o)),we(h(t),"Next 7 days",a[2](o))];var i;return n.className="menu__options",r.forEach((e=>{e.addClickEvent((()=>{ke.cleanActives(),e.addActiveClass()})),n.appendChild(e.element)})),{element:n,menuOptions:r,updateTasks:e=>{o=e;for(let e=0;e<r.length;e++)r[e].updateTasks(a[e](o))}}})(),ke=(()=>{const e=document.createElement("aside");return e.className="menu hidden",e.appendChild(ye.element),e.appendChild(_()),e.appendChild(L.element),e.appendChild(_()),e.appendChild(J.element),{element:e,toggleHide:()=>{e.classList.toggle("hidden")},cleanActives:()=>{L.cleanActives();for(let e of ye.menuOptions)e.removeActiveClass();for(let e of J.priorityElements)e.removeActiveClass()},updateTasks:()=>{const e=k.getSortedTasks();ye.updateTasks(e),L.updateTasks(e),J.updateTasks(e);const t=x.getElement();t&&t.click()}}})(),Ee=(()=>{const t=document.createElement("header");t.className="header";const n=document.createElement("nav");n.className="navbar";const o=document.createElement("h2");o.className="header__title",o.textContent="TodoApp";const r=(s="header__icon header__icon--menu",e(a(),s));var s;r.addEventListener("click",ke.toggleHide);const l=i("header__icon header__icon--add");return l.addEventListener("click",(()=>M.updateForm(null))),n.appendChild(r),n.appendChild(o),n.appendChild(l),t.appendChild(n),t})(),xe=(()=>{const e=document.createElement("div");return e.className="main",e.appendChild(ke.element),e.appendChild(be.element),ye.menuOptions[0].element.click(),e})(),Ne=document.querySelector(".container");f(Ne,Ee),f(Ne,xe),f(Ne,D.element),f(Ne,M.element),f(Ne,A.element),f(Ne,S.element),f(Ne,H.element)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,